# Deploys Science Platform Integration GCP Project with Terraform
name: 'RSP INT GCP Project'

on:
  pull_request:
    paths:
      - 'environment/deployments/science-platform/env/integration.tfvars'
  push:
    paths:
      - 'environment/deployments/science-platform/env/integration.tfvars'
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Sets default shell and working directory
    defaults:
      run:
        shell: bash
        working-directory: ./environment/deployments/science-platform

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Gcloud CLI setup
    - name: GCP login
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '319.0.0'
        service_account_key: ${{ secrets.PIPELINE_RSP_INT_PROJECT }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    # Install terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.5

    # Checks for proper terraform code formatting
    - name: Terraform Fmt
      run: terraform fmt

     # Initialize a new or existing terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend-config=bucket=${{ secrets.TERRAFORM_STATE_BUCKET }} -backend-config=prefix=science-platform/int

    # Checks that all terraform configuration files adhere to a canonical format
    - name: Terraform Validate
      run: terraform validate

    # Generates Terraform execution plan
    - name: Terraform Plan
      id: plan
      run: terraform plan -var-file=env/integration.tfvars -no-color

    # On push to main, build or change infrastructure according to terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -var-file=env/integration.tfvars -auto-approve
