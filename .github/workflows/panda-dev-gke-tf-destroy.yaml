# Destroys PanDA Integration GKE with Terraform
name: 'PanDA DEV GKE Destroy'

on:
  workflow_dispatch:
    inputs:
      tfvars:
        description: The TFVARS file to use
        required: false
        default: dev-gke.tfvars

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./environment/deployments/panda/gke

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # gcloud CLI setup
    - name: GCP login
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '319.0.0'
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    # Installs terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.12.29

     # Checks for proper formatting in terraform code
    - name: Terraform Fmt
      run: terraform fmt

     # Initialize a new or existing terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend-config=bucket=${{ secrets.TERRAFORM_STATE_BUCKET }} -backend-config=prefix=panda/dev/gke

    # Checks that all terraform configuration files adhere to a canonical format
    - name: Terraform Validate
      run: terraform validate

    # Generates an execution destroy for terraform
    - name: Terraform Plan Destroy
      id: plan
      run: terraform plan -destroy -var-file=../env/dev-gke.tfvars -no-color  

    # Generates an execution destroy for terraform
    - name: Terraform Destroy
      id: destroy
      run: terraform destroy -var-file=../env/dev-gke.tfvars -no-color -auto-approve

    # On push to main, build or change infrastructure according to terraform configuration files
    # - name: Terraform Destroy Approve
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform destroy -var-file=../env/dev-gke.tfvars -refresh=false -auto-approve
